#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define SYM 1
#define UTIL 2
#define SETTINGS 3
// -----------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};


/ {
	behaviors {
		shi: shift_enter {
            // Formulated for a good shift-hold enter tap
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred"; // actuates shift on inturrupting key press
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            hold-while-undecided; // Allows for shift + mouse click
            bindings = <&kp>, <&kp>;
        };
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
		
		// Balanced flavor of hold-tap, hopefully works with shift and homerow mods
		// "Balanced" triggers the hold-behavior only after the second key is released
		bms: balanced_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>; 
            quick-tap-ms = <200>; // Allows for re-tapping the same key to produce a held version (holding backspace)
			require-prior-idle-ms = <200>; // When typing fast, the key will resolve on key-down without the possibility of triggering the mod
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
	};

	macros {
		// sometimes my device thinks a modifier is being held down
		// pressing all modifiers fixes it.
		unstick: unstick {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
		};

		quick: quick {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp U &kp D &kp D &kp H &kp A &kp ENTER>;
        };

		emdash: emdash {
			compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <20>;
			tap-ms = <20>;
			bindings
				= <&macro_press   &kp LSHIFT &kp LALT>
				, <&macro_tap     &kp MINUS>
				, <&macro_release &kp LSHIFT &kp LALT>
				;
					};
	};

	combos {
		compatible = "zmk,combos"; 

		// right thumb & bottom pinky
		combo_settings {
			timeout-ms = <200>;
			key-positions = <30 33>;
			bindings = <&mo SETTINGS>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			&kp Q &kp W &kp E &kp R &kp T          &kp Y &kp U  &kp I &kp O &kp P
			&kp A &kp S &kp D &kp F &kp G          &kp H &kp J &kp K  &kp L &kp SQT
			&kp Z &kp X &kp C &kp V &kp B          &kp N &kp M  &kp COMMA &kp DOT &kp SLASH
						&lt UTIL BSPC &shi LSHFT ENTER       &kp SPACE &lt SYM ENTER
			>;
		};

		// Numbers, symbols, and one-shot (&sk) modifiers
		sym_layer {
			label = "Sym.";
			bindings = <
			&kp N1    &kp N2    &kp N3   &kp N4    &kp N5		    &kp N6   &kp N7   &kp N8   &kp N9    &kp N0
			&kp TAB &emdash &kp HASH &kp ASTRK &kp EQUAL         &kp MINUS &sk LGUI &sk LALT &sk LCTRL &kp SEMI
			&kp GRAVE  &kp LBRC  &kp LBKT &kp LPAR  &kp BSLH 	    &kp FSLH &kp RPAR &kp RBKT &kp RBRC  &kp EXCL
										&kp LSHIFT  &trans       &trans &trans
			>;
		};
 
		// Computer controls and arrow kews
		util_layer {
			label = "Util.";
			bindings = <
			&kp ESC  &kp F14      &kp F15      &kp C_VOL_DN &kp C_VOL_UP	         &none &none &none &none &none
			&kp TAB  &kp LEFT     &kp UP       &kp RIGHT    &kp C_PP 	            &none &sk LGUI &sk LALT &sk LCTRL &none
			&none    &none        &kp DOWN     &kp C_PREV   &kp C_NEXT             &none &none &none &quick &none
												&kp LSHIFT &trans                  &trans  &kp LSHIFT 
			>;
		};

		// Used to change the keyboard's settings.
		settings_layer {
				label = "Sett.";
				bindings = <
				&bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader 
				&none &none &none &none &bt BT_SEL 1 					  &bt BT_SEL 4 &none &none &none &none
				&none &none &none &none      &bt BT_SEL 2                     &bt BT_SEL 5 &none &none &none &none
										&none &none                         &none &none 
				>;
		};
	};
};